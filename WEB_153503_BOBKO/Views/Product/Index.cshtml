@using WEB_153503_BOBKO.Domain.Models
@model ListModel<Game>

@{
    ViewData["Title"] = "GAMES";

    var request = ViewContext.HttpContext.Request;
    var returnUrl = request.Path + request.QueryString.ToUriComponent();
    var currentGenre = ViewData["currentGenre"] as GameGenre;
    var genres = ViewData["genres"] as IEnumerable<GameGenre>;
}

<h1>Games</h1>

@*<div class="col-2 border-2">
    <ul class="nav ">
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle"
               data-bs-toggle="dropdown"
               href="#"
               role="button"
               aria-expanded="false">
                @ViewData["currentGenre"]
            </a>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item"
                       asp-controller="product"
                       asp-route-gameGenreNormalized=@null>Все</a>
                </li>
                @foreach (var item in ViewData["genres"] as IEnumerable<GameGenre>)
                {
                    <li>
                        <a class="dropdown-item"
                       asp-controller="product"
                       asp-route-gameGenreNormalized="@item.NormalizedName">
                            @item.Name
                        </a>
                    </li>
                }
            </ul>
        </li>
    </ul>
</div>*@

<h2>@currentGenre.Name</h2>

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
        Жанр игры
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
        <li><a class="dropdown-item" asp-controller="Product" asp-action="Index" asp-route-gameGenreNormalized="">Все</a></li>
        @foreach (var item in genres)
        {
            <li>
                <a class="dropdown-item" asp-controller="Product" asp-action="Index" asp-route-gameGenreNormalized="@item.NormalizedName">
                    @item.Name
                </a>
            </li>
        }
    </ul>
</div>

<br />
<br />

<div class="container">
    <div class="row">
        @foreach (var item in Model.Items)
        {
            <div class="col-md-4">
                <div class="card" style="width: 20rem;">
                    <img src="@item.Path" class="card-img-top" alt="Game Image">
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Price) USD</p>
                        <a asp-controller="Cart" asp-action="Add" asp-route-id="@item.Id" asp-route-returnurl="@returnUrl" class="btn btn-primary">Add to cart</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@{
    string? category = request.RouteValues["gameGenreNormalized"]?.ToString();
    int prev =
        Model.CurrentPage == 1 ?
        1 :
        Model.CurrentPage - 1;
    int next =
        Model.CurrentPage == Model.TotalPages ?
        Model.TotalPages :
        Model.CurrentPage + 1;
}

<br />
<br />

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" asp-action="Index" asp-route-gameGenreNormalized="@currentGenre.NormalizedName" asp-route-pageNo=@prev>Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage? "active": "")">
                <a class="page-link" asp-action="Index" asp-route-gameGenreNormalized="@currentGenre.NormalizedName" asp-route-pageNo=@i>@i</a>
            </li>
        }
        <li class="page-item">
            <a class="page-link" asp-action="Index" asp-route-gameGenreNormalized="@currentGenre.NormalizedName" asp-route-pageNo=@next>Next</a>
        </li>
    </ul>
</nav>